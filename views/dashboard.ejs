<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link rel="stylesheet" href="/css/style.css">
</head>
<body>
    <div class="container">
        <button id="logoutButton">Logout</button>
        
        <h1>Welcome, <%= user.username %>!</h1>
        
        <div class="dashboard-content">
            <section class="add-task-section">
                <h2>Add New Task</h2>
                <form id="addTaskForm">
                    <div class="form-group">
                        <input type="text" 
                               id="taskTitle" 
                               placeholder="Task Title" 
                               required>
                    </div>
                    <div class="form-group">
                        <textarea id="taskDescription" 
                                  placeholder="Task Description"
                                  rows="3"></textarea>
                    </div>
                    <div class="form-group">
                        <label for="taskDueDate">Due Date:</label>
                        <input type="date" 
                               id="taskDueDate">
                    </div>
                    <button type="submit">Add Task</button>
                </form>
            </section>

            <section class="tasks-section">
                <h2>Your Tasks</h2>
                <div id="taskList">
                    <!-- Tasks will be dynamically added here -->
                </div>
            </section>
        </div>

        <div id="message"></div>
    </div>

    <script>
        // Fetch and display tasks
        async function fetchTasks() {
            try {
                const response = await fetch('/tasks');
                if (!response.ok) throw new Error('Failed to fetch tasks');
                const tasks = await response.json();
                const taskList = document.getElementById('taskList');
                taskList.innerHTML = '';
                
                if (tasks.length === 0) {
                    taskList.innerHTML = '<div class="no-tasks"><p>No tasks found. Add a new task to get started!</p></div>';
                } else {
                    tasks.forEach(task => {
                        const taskElement = document.createElement('div');
                        taskElement.className = 'task-card';
                        const dueDate = task.due_date ? new Date(task.due_date).toLocaleDateString() : 'No due date';
                        taskElement.innerHTML = `
                            <h4>${task.title}</h4>
                            <p class="task-description">${task.description || 'No description'}</p>
                            <p class="task-due-date">Due: ${dueDate}</p>
                            <button onclick="deleteTask(${task.id})" class="delete-btn">Delete Task</button>
                        `;
                        taskList.appendChild(taskElement);
                    });
                }
            } catch (error) {
                showMessage('Error fetching tasks: ' + error.message, 'error');
            }
        }

        // Add new task
        document.getElementById('addTaskForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            const title = document.getElementById('taskTitle').value;
            const description = document.getElementById('taskDescription').value;
            const dueDate = document.getElementById('taskDueDate').value;
            
            try {
                const response = await fetch('/tasks', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ title, description, dueDate })
                });

                if (response.ok) {
                    showMessage('Task added successfully!', 'success');
                    fetchTasks();
                    e.target.reset();
                } else {
                    throw new Error('Failed to add task');
                }
            } catch (error) {
                showMessage('Error adding task: ' + error.message, 'error');
            }
        });

        // Delete task
        async function deleteTask(id) {
            try {
                const response = await fetch(`/tasks/${id}`, {
                    method: 'DELETE'
                });

                if (response.ok) {
                    showMessage('Task deleted successfully!', 'success');
                    fetchTasks();
                } else {
                    throw new Error('Failed to delete task');
                }
            } catch (error) {
                showMessage('Error deleting task: ' + error.message, 'error');
            }
        }

        // Logout
        document.getElementById('logoutButton').addEventListener('click', async () => {
            try {
                const response = await fetch('/auth/logout', {
                    method: 'POST'
                });

                if (response.ok) {
                    window.location.href = '/';
                } else {
                    throw new Error('Logout failed');
                }
            } catch (error) {
                showMessage('Error during logout: ' + error.message, 'error');
            }
        });

        // Show message
        function showMessage(message, type) {
            const messageDiv = document.getElementById('message');
            messageDiv.textContent = message;
            messageDiv.className = type;
            setTimeout(() => {
                messageDiv.textContent = '';
                messageDiv.className = '';
            }, 3000);
        }

        // Initial setup
        fetchTasks();
    </script>
</body>
</html>
